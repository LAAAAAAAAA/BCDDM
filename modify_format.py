# This file is part of BCDDM and is released under the BSD 3-Clause License.
# 
# Copyright (c) 2025 Zelin Zhang. All rights reserved.

import numpy as np
import argparse

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Convert the npz files generated by `sample.py` into the data format for ResNet training.')
    parser.add_argument('--input_files', type=str, nargs='+', required=True, help='The list of npz files generated by `sample.py`, supports wildcards')
    args = parser.parse_args()

    import glob
    all_files = []
    for pattern in args.input_files:
        all_files.extend(glob.glob(pattern))

    if not all_files:
        print("Error: No matching npz files found")
        exit(1)

    for input_file in all_files:
        if not input_file.endswith('.npz'):
            print(f"Warning: Skipping non-npz file {input_file}")
            continue
            
        try:
            data = np.load(input_file)
            generated_image = data['generated_image']
            original_label = data['original_label']

            output_file = input_file.replace('.npz', '_modified.npz')
            np.savez(output_file, I_rot=generated_image, normalized_parm_array=original_label)
            print(f"Successfully processed file: {input_file} -> {output_file}")
            
        except Exception as e:
            print(f"Error processing file {input_file}: {str(e)}")
            continue
